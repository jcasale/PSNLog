name: CI

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup wix
        run: |
          dotnet.exe tool install --global wix --version 5.0.2 --verbosity diag

          wix.exe extension add WixToolset.UI.wixext/5.0.2 --global
          wix.exe extension list --global

      - name: Generate version property
        id: version
        run: |
          $tag = git.exe describe --tags --long
          $version = [version]::new($tag.Split('-')[0].TrimStart('v'))

          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Run tests
        run: dotnet.exe test .\src\PSNLog.sln --configuration Release --runtime win-x64

      - name: Clean solution
        run: dotnet.exe clean .\src\PSNLog.sln --configuration Release

      - name: Build project
        run: dotnet.exe publish .\src\PSNLog\PSNLog.csproj --configuration Release --runtime win-x64 --output .\publish

      - name: Prepare release
        run: Remove-Item ./publish/* -Include *.pdb,*.xml -ErrorAction Stop

      - name: Generate PowerShell help
        run: |
          Install-Module -Name platyPS -Force -Confirm:$false -ErrorAction Stop
          Import-Module ./publish/PSNLog.psd1 -ErrorAction Stop
          Update-MarkdownHelp ./docs -UpdateInputOutput -Force -ErrorAction Stop
          New-ExternalHelp ./docs -OutputPath ./publish -ErrorAction Stop

      - name: Build installer
        run: |
          wix.exe `
            build `
            -arch x64 `
            -src src\Product.wxs `
            -d ProductSource="$(Resolve-Path ./publish)" `
            -d ProductVersion="${{ steps.version.outputs.version }}" `
            -ext WixToolset.UI.wixext `
            -out ps-nlog.msi

      - name: Validate installer
        run: wix.exe msi validate ps-nlog.msi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ps-nlog
          path: |
            ./docs/
            ./ps-nlog.msi
          if-no-files-found: error

      - name: Install msi
        run: |
          $process = Start-Process msiexec.exe -ArgumentList '/i','ps-nlog.msi','/qn' -Wait -NoNewWindow -PassThru -ErrorAction Stop
          if ($process.ExitCode -ne 0)
          {
              throw 'Non zero exit code: "{0}".' -f $process.ExitCode
          }

      - name: Test module
        shell: powershell
        run: |
          $PSVersionTable

          $logger = New-NLogBasicLogger -Name foo -Path foo.log -ErrorAction Stop
          $logger.Info('Hello World!')
          Stop-NLogLogging

      - name: Publish release
        if: github.ref_type == 'tag'
        run: gh.exe release create v${{ steps.version.outputs.version }} --title v${{ steps.version.outputs.version }} --notes 'PowerShell NLog logging module.' ps-nlog.msi
        env:
            # Requires a personal access token with a fine-grained permission of contents:read/write.
            GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
