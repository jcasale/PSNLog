<#@ template debug="true" hostSpecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#
    var properties = GetProperties<NLog.Targets.FileTarget>().ToArray();
#>
namespace PSNLog;

using System.Management.Automation;

[Cmdlet(VerbsCommon.New, "NLogFileTarget")]
[OutputType(typeof(NLog.Targets.FileTarget))]
public class NewFileTargetCommand : PSCmdlet
{
<#
    foreach (var property in properties)
    {
        WriteLine("    [Parameter(");
        WriteLine("        ValueFromPipelineByPropertyName = true,");
        WriteLine("        HelpMessage = \"{0}\")]", property.Summary);
        Write("    public {0}", property.Alias);

        if (property.IsCollection)
        {
            Write("[]");
        }
        else if (property.Type.IsValueType)
        {
            Write("?");
        }

        WriteLine(" {0} {{ get; set; }}", property.Name);
        WriteLine(string.Empty);
    }
#>
    protected override void ProcessRecord()
    {
        var instance = new NLog.Targets.FileTarget();

<#
        foreach (var property in properties)
        {
            if (property.IsCollection)
            {
                WriteLine("        if (this.{0} is {{Length: > 0}})", property.Name);
                WriteLine("        {");
                WriteLine("            foreach (var item in this.{0})", property.Name);
                WriteLine("            {");
                WriteLine("                instance.{0}.Add(item);", property.Name);
                WriteLine("            }");
                WriteLine("        }");
            }
            else if (property.Type.IsValueType)
            {
                WriteLine("        if (this.{0}.HasValue)", property.Name);
                WriteLine("        {");
                WriteLine("            instance.{0} = this.{0}.Value;", property.Name);
                WriteLine("        }");
            }
            else
            {
                WriteLine("        if (this.{0} is not null)", property.Name);
                WriteLine("        {");
                WriteLine("            instance.{0} = this.{0};", property.Name);
                WriteLine("        }");
            }

            WriteLine(string.Empty);
        }
#>
        this.WriteObject(instance);
    }
}
<#@ include file="base.t4" #>